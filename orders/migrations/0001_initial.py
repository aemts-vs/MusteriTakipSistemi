# Generated by Django 5.2.3 on 2025-06-19 10:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stock', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Sipariş Numarası/ID')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Sipariş Tarihi ve Saati')),
                ('order_status', models.CharField(choices=[('new', 'Yeni Sipariş'), ('accepted', 'Kabul Edildi / Hazırlanıyor'), ('shipped', 'Kargoya Verildi'), ('delivered', 'Teslim Edildi'), ('cancelled', 'İptal Edildi'), ('returned', 'İade Edildi'), ('passive', 'Pasif')], default='new', max_length=20, verbose_name='Sipariş Durumu')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Toplam Ödeme Tutarı')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Sipariş Tamamlandı mı?')),
                ('payment_status', models.CharField(choices=[('pending', 'Ödeme Bekleniyor'), ('paid', 'Ödendi'), ('refunded', 'İade Edildi')], default='pending', max_length=20, verbose_name='Ödeme Durumu')),
                ('payment_method', models.CharField(blank=True, choices=[('credit_card', 'Kredi Kartı'), ('bank_transfer', 'Havale/EFT'), ('cash_on_delivery', 'Kapıda Ödeme'), ('installment', 'Vadeli Ödeme')], max_length=20, null=True, verbose_name='Ödeme Yöntemi')),
                ('delivery_address', models.TextField(verbose_name='Teslimat Adresi')),
                ('shipping_company', models.CharField(blank=True, max_length=100, null=True, verbose_name='Kargo Firması')),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Takip Numarası')),
                ('estimated_delivery_date', models.DateField(blank=True, null=True, verbose_name='Tahmini Teslimat Tarihi')),
                ('discount_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='İndirim/Promosyon Kodu')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='İndirim Tutarı')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_orders', to=settings.AUTH_USER_MODEL, verbose_name='Müşteri')),
            ],
            options={
                'verbose_name': 'Sipariş',
                'verbose_name_plural': 'Siparişler',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, verbose_name='Miktar')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Birim Fiyatı')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='Sipariş')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stock.product', verbose_name='Ürün')),
            ],
            options={
                'verbose_name': 'Sipariş Kalemi',
                'verbose_name_plural': 'Sipariş Kalemleri',
                'unique_together': {('order', 'product')},
            },
        ),
    ]
